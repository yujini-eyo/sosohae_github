<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.adminMember">

  <resultMap id="MemberMap" type="com.myspring.eum.member.vo.MemberVO">
    <id     property="id"        column="id"/>
    <result property="name"      column="name"/>
    <result property="email"     column="email"/>
    <result property="role"      column="role"/>
    <result property="status"    column="status"/>
    <result property="points"    column="points"/>
    <result property="lastLogin" column="last_login"/>
    <result property="createdAt" column="created_at"/>
  </resultMap>

  <sql id="whereClause">
    <where>
      <if test="keyword != null and keyword != ''">
        <choose>
          <when test="field == 'id'">
            id LIKE CONCAT('%', #{keyword}, '%')
          </when>
          <when test="field == 'name'">
            name LIKE CONCAT('%', #{keyword}, '%')
          </when>
          <when test="field == 'email'">
            email LIKE CONCAT('%', #{keyword}, '%')
          </when>
          <otherwise>
            (id LIKE CONCAT('%', #{keyword}, '%')
            OR name LIKE CONCAT('%', #{keyword}, '%')
            OR email LIKE CONCAT('%', #{keyword}, '%'))
          </otherwise>
        </choose>
      </if>

      <if test="status != null and status != ''">
        AND status = #{status}
      </if>
    </where>
  </sql>

  <sql id="orderBy">
    ORDER BY
    <choose>
      <when test="sort == 'name'">       name</when>
      <when test="sort == 'email'">      email</when>
      <when test="sort == 'created_at'"> created_at</when>
      <when test="sort == 'last_login'"> last_login</when>
      <when test="sort == 'points'">     points</when>
      <otherwise> created_at </otherwise>
    </choose>
    <choose>
      <when test="order == 'ASC' or orderDir == 'asc'">ASC</when>
      <otherwise>DESC</otherwise>
    </choose>
  </sql>

  <select id="countMembers" parameterType="com.myspring.eum.common.paging.PageRequest"
          resultType="long">
    SELECT COUNT(1)
    FROM member
    <include refid="whereClause"/>
  </select>

  <select id="findMembers" parameterType="com.myspring.eum.common.paging.PageRequest"
          resultMap="MemberMap">
    SELECT id, name, email, role, status, points, last_login, created_at
    FROM member
    <include refid="whereClause"/>
    <include refid="orderBy"/>
    LIMIT #{limit} OFFSET #{offset}
  </select>
</mapper>
