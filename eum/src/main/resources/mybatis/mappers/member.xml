<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.member">

  <resultMap id="memResult" type="com.myspring.eum.member.vo.MemberVO">
    <id     property="id"        column="id"/>
    <result property="password"  column="password"/>
    <result property="name"      column="name"/>
    <result property="email"     column="email"/>
    <result property="address"   column="address"/>
    <result property="age"       column="age"/>
    <result property="birth"     column="birth"/>
    <result property="phone"     column="phone"/>
    <result property="code"      column="code"/>
    <result property="notes"     column="notes"/>
    <result property="createdAt" column="created_at"/>
    
  </resultMap>
  
  <!-- ✅ 회원가입 INSERT -->
  <insert id="insertMember" parameterType="com.myspring.eum.member.vo.MemberVO">
    INSERT INTO member
      (id, password, name, email, address, age, birth, phone, code, notes, role, status, created_at, updated_at)
    VALUES
      (#{id}, #{password}, #{name}, #{email}, #{address}, #{age}, #{birth},
       #{phone}, #{code}, #{notes}, 'USER', 'ACTIVE', NOW(), NOW())
  </insert>
   <!-- ✅ 아이디 + 비밀번호로 로그인 -->
  <select id="loginById" parameterType="com.myspring.eum.member.vo.MemberVO"
          resultType="com.myspring.eum.member.vo.MemberVO">
    SELECT *
    FROM member
    WHERE id = #{id}
      AND password = #{password}
      AND status = 'ACTIVE'
    LIMIT 1
  </select>

  <select id="findById" parameterType="string" resultMap="memResult">
    SELECT *
    FROM member
    WHERE id = #{id}
    LIMIT 1
  </select>

  <select id="selectAllMemberList" resultMap="memResult">
    SELECT *
    FROM member
    ORDER BY created_at DESC
  </select>
  
    <!-- 프로필 업데이트: DAO의 updateProfile(...) 와 일치 -->
  <update id="updateProfile" parameterType="com.myspring.eum.member.vo.MemberVO">
    UPDATE member
       SET name       = #{name},
           email      = #{email},
           address    = #{address},
           phone      = #{phone},
           birth      = #{birth},
           notes      = #{notes},
           updated_at = NOW()
     WHERE id = #{id}
  </update>

  <!-- 현재 비밀번호 확인 (선택): DAO의 verifyPassword(...) 와 일치 -->
  <select id="verifyPassword" parameterType="map" resultType="int">
    SELECT COUNT(1)
      FROM member
     WHERE id = #{id}
       AND password = #{password}
  </select>

  <!-- ★ 비밀번호 변경: 지금 에러가 나는 바로 그 쿼리 -->
  <update id="updatePassword" parameterType="map">
    UPDATE member
       SET password  = #{password},
           updated_at = NOW()
     WHERE id = #{id}
  </update>

</mapper>
