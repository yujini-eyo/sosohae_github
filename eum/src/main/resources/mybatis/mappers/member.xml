<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.member">

  <!-- MemberVO 매핑 -->
  <resultMap id="memResult" type="com.myspring.eum.member.vo.MemberVO">
    <id     property="id"        column="id"/>
    <result property="password"  column="password"/>
    <result property="name"      column="name"/>
    <result property="email"     column="email"/>
    <result property="address"   column="address"/>
    <result property="age"       column="age"/>
    <result property="birth"     column="birth"/>
    <result property="phone"     column="phone"/>
    <result property="code"      column="code"/>
    <result property="notes"     column="notes"/>
    <!-- createdAt(java) ↔ created_at(DB) -->
    <result property="createdAt" column="created_at"/>
  </resultMap>

  <!-- 회원 가입 -->
  <insert id="insertMember" parameterType="com.myspring.eum.member.vo.MemberVO">
    INSERT INTO member
      (id, password, name, email, address, age, birth, phone, code, notes, created_at)
    VALUES
      (#{id}, #{password}, #{name}, #{email}, #{address}, #{age}, #{birth}, #{phone}, #{code}, #{notes}, NOW())
  </insert>

  <!-- 회원 목록(관리자 목록 화면에 사용) -->
  <select id="selectAllMemberList" resultMap="memResult">
    SELECT *
    FROM member
    ORDER BY created_at DESC
  </select>

  <!-- 회원 단건 조회 -->
  <select id="findById" parameterType="string" resultMap="memResult">
    SELECT *
    FROM member
    WHERE id = #{id}
    LIMIT 1
  </select>

  <!-- 회원 로그인(id + password) -->
  <select id="loginById"
          parameterType="com.myspring.eum.member.vo.MemberVO"
          resultMap="memResult">
    SELECT *
    FROM member
    WHERE id = #{id}
      AND password = #{password}
    LIMIT 1
  </select>

  <!-- (선택) 회원 정보 수정: 비밀번호가 비어있으면 SET하지 않음 -->
  <update id="updateMember" parameterType="com.myspring.eum.member.vo.MemberVO">
    UPDATE member
    <set>
      <if test="password != null and password != ''">password = #{password},</if>
      <if test="name    != null">name = #{name},</if>
      <if test="email   != null">email = #{email},</if>
      <if test="address != null">address = #{address},</if>
      <if test="age     != null">age = #{age},</if>
      <if test="birth   != null">birth = #{birth},</if>
      <if test="phone   != null">phone = #{phone},</if>
      <if test="code    != null">code = #{code},</if>
      <if test="notes   != null">notes = #{notes},</if>
    </set>
    WHERE id = #{id}
  </update>

  <!-- (선택) 회원 삭제 -->
  <delete id="deleteMember" parameterType="string">
    DELETE FROM member
    WHERE id = #{_parameter}
  </delete>

</mapper>
