<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.support">
	<!-- action-mybatis.xml 에 반드시 추가: <typeAlias alias="supportVO" type="com.myspring.eum.support.vo.SupportApplicationVO"/> -->

	<!-- DB 컬럼 → VO 프로퍼티 매핑 -->
	<resultMap id="SupportMap" type="supportVO">
		<id property="applicationId" column="application_id" />
		<result property="articleNO" column="articleNO" />
		<result property="volunteerId" column="volunteer_id" />
		<result property="status" column="status" />
		<result property="message" column="message" />
		<result property="createdAt" column="created_at" />
		<result property="updatedAt" column="updated_at" />
	</resultMap>

	<!-- INSERT: PK 자동 생성(application_id) → applicationId 로 채워짐 -->
	<insert id="insert" parameterType="supportVO"
		useGeneratedKeys="true" keyProperty="applicationId"
		keyColumn="application_id">
		INSERT INTO support_application (articleNO, volunteer_id, status, message)
		VALUES (#{articleNO}, #{volunteerId}, #{status}, #{message})
	</insert>

	<!-- 중복 지원 존재 여부 -->
	<select id="existsByArticleAndVolunteer" parameterType="map"
		resultType="int">
		SELECT COUNT(*)
		FROM support_application
		WHERE articleNO = #{articleNO} AND volunteer_id = #{volunteerId}
	</select>

	<!-- 글별 신청자 목록 (APPLIED 우선 정렬) -->
	<select id="listByArticle" parameterType="int"
		resultMap="SupportMap">
		SELECT application_id, articleNO, volunteer_id, status, message, created_at,
		updated_at
		FROM support_application
		WHERE articleNO = #{value}
		ORDER BY status='APPLIED' DESC, created_at DESC
	</select>

	<!-- 내 신청 목록 -->
	<select id="findByVolunteerId" parameterType="string"
		resultMap="SupportMap">
		SELECT application_id, articleNO, volunteer_id, status, message, created_at,
		updated_at
		FROM support_application
		WHERE volunteer_id = #{value}
		ORDER BY created_at DESC
	</select>

	<!-- 상태 변경 -->
	<update id="updateStatus" parameterType="map">
		UPDATE support_application
		SET status = #{status}
		WHERE application_id = #{applicationId}
	</update>

	<!-- 단건 삭제(선택) -->
	<delete id="deleteById" parameterType="long">
		DELETE FROM support_application WHERE application_id = #{value}
	</delete>
</mapper>
